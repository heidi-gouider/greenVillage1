# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    # app.jwtsecret: '%env(JWT_SECRET)%'
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # Alias pour le provider utilisateur
    Symfony\Component\Security\Core\User\UserProviderInterface: '@security.user.provider.concrete.app_user_provider'

    # Alias pour le provider administrateur
    # Symfony\Component\Security\Core\User\UserProviderInterface: '@security.user.provider.concrete.admin_user_provider'

    # makes classes in src/ available to be used as services
    # Service pour AppAutenticatorAuthenticator
    App\Security\AppAutenticatorAuthenticator:
        arguments:
            $userProvider: '@security.user.provider.concrete.app_user_provider'


    # Service pour AdminAuthenticator
    App\Security\AdminAuthenticator:
        arguments:
            $adminProvider: '@security.user.provider.concrete.admin_user_provider'

    # Définir explicitement le provider des utilisateurs
    # Utiliser un provider basé sur Doctrine pour les utilisateurs
    # security.user.provider.concrete.app_user_provider:
    #     class: Symfony\Component\Security\Core\User\EntityUserProvider # Remplacez par votre propre provider
        # class: Symfony\Bridge\Doctrine\Security\User\EntityUserProvider
        # arguments:
            # - '@doctrine.orm.entity_manager' # L'EntityManager pour accéder à la base de données
            # - '@doctrine'  # Injecte ManagerRegistry au lieu de l'EntityManager directement
            # - 'App\Entity\Utilisateur'

    # Définir explicitement le provider des administrateurs
    # Utiliser un provider basé sur Doctrine pour les administrateurs
    # security.user.provider.concrete.app_admin_provider:
        # class: Symfony\Component\Security\Core\User\EntityUserProvider # Remplacez par votre propre provider
        # class: Symfony\Bridge\Doctrine\Security\User\EntityUserProvider
        # arguments:
            # - '@doctrine.orm.entity_manager'
            # - '@doctrine'  # Injecte ManagerRegistry au lieu de l'EntityManager directement
            # - 'App\Entity\Admin'

    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    #  App\Service\StripeService:
    #     arguments:
    #         $stripeSecretKey: '%env(STRIPE_SECRET_KEY)%'
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # UxTogglePassword:
    # resource: '../src/UxTogglePassword'
    # namespace: 'App\UxTogglePassword'
    # type: annotation

